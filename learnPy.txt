#!/usr/bin/env python
# -*- coding: utf-8 -*-


字符编码：
1.ASCII编码：最早只有127个字母被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码。

2.Unicode字符集：把所有语言都统一到一套编码里。Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。现代操作系统和大多数编程语言都直接支持Unicode。
Unicode字符集表示表示各种字符，每个字符的表示都是固定的且全世界统一的。但是在储存字符的时候可以选择补0的方式，可以是变长的UTF-8，也可是定长的UTF-16。所以解码文件的时候也需要对应的解码格式才能防止乱码。

3.UTF-8编码：把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节


编码转换：
1.用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件；
2.浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器；所以你看到很多网页的源码上会有类似<meta charset="UTF-8" />的信息，表示该网页正是用的UTF-8编码。



数据类型;
1、整数：
2、浮点数
3、字符串
4、布尔值	True/False
	布尔值可以用and、or和not运算
5、空值 None标识
6、常量
7、字符串
	Python提供了ord()和chr()函数，可以把字母和对应的数字相互转换。
	>>> print u'中文'
	中文
	>>> u'中'
	u'\u4e2d'
	>>> u'ABC'.encode('utf-8')
	'ABC'
	>>> u'中文'.encode('utf-8')
	'\xe4\xb8\xad\xe6\x96\x87'
	>>> len('\xe4\xb8\xad\xe6\x96\x87')
	6
    >>> 'abc'.decode('utf-8')
    u'abc'
    >>> '\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
    u'\u4e2d\u6587'
    >>> print '\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
    中文
8、格式化
    %s  表示用字符串替换，
    %d  表示用整数替换
    %f	浮点数
    %x	十六进制整数

9、list  list是一种有序的集合，可以随时添加和删除其中的元素
    >>> classmates[-1]                  ---最后一个元素
    >>> classmates.append('Adam')       ---末尾追加元素
    >>> classmates.insert(1, 'Jack')    ---插入指定位置元素
    >>> classmates.pop()                ---删除末尾元素
    >>> classmates.pop(1)               ---删除指定位置元素
    >>> classmates[1] = 'Sarah'         ---替换指定元素的内容

10、tuple    tuple和list非常类似，但是tuple一旦初始化就不能修改
    >>> t = (1, 2)
    >>> t = (1,)            ---一个元素时的表示方式
    tuple内元素的指向是不变的，但指向list后，list的元素内容可以变。


